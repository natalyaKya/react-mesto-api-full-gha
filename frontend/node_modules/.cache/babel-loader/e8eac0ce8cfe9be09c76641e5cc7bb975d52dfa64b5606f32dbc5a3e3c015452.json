{"ast":null,"code":"class Api {\n  constructor(options) {\n    this.options = options;\n    this.baseUrl = this.options.baseUrl;\n    this.headers = this.options.headers;\n  }\n  _checkStatus(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"GET\",\n      headers: this.headers,\n      credentials: 'include'\n    }).then(res => this._checkStatus(res));\n  }\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: this.headers,\n      credentials: 'include'\n    }).then(res => this._checkStatus(res));\n  }\n  setUserInfoApi(name, about) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._checkStatus);\n  }\n  getNewCard(name, link) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => this._checkStatus(res));\n  }\n  addLike(id) {\n    return fetch(`${this.baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this.headers,\n      credentials: 'include'\n    }).then(res => this._checkStatus(res));\n  }\n  removeLike(id) {\n    return fetch(`${this.baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this.headers,\n      credentials: 'include'\n    }).then(res => this._checkStatus(res));\n  }\n  deleteCard(id) {\n    return fetch(`${this.baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this.headers,\n      credentials: 'include'\n    }).then(res => this._checkStatus(res));\n  }\n  changeAvatar(avatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this.headers,\n      credentials: 'include',\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => this._checkStatus(res));\n  }\n}\nexport const api = new Api({\n  baseUrl: \"https://localhost:3001\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["Api","constructor","options","baseUrl","headers","_checkStatus","res","ok","json","Promise","reject","status","getUserInfo","fetch","method","credentials","then","getInitialCards","setUserInfoApi","name","about","body","JSON","stringify","getNewCard","link","addLike","id","removeLike","deleteCard","changeAvatar","avatar","api"],"sources":["C:/Users/User/Desktop/dev/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this.options = options;\r\n    this.baseUrl = this.options.baseUrl;\r\n    this.headers = this.options.headers;\r\n  }\r\n  _checkStatus(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n  getUserInfo() {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: \"GET\",\r\n      headers: this.headers,\r\n      credentials: 'include',\r\n    }).then((res) => this._checkStatus(res));\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      headers: this.headers,\r\n      credentials: 'include',\r\n    }).then((res) => this._checkStatus(res));\r\n  }\r\n  setUserInfoApi(name, about) {\r\n    return fetch(`${this.baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      credentials: 'include',\r\n      body: JSON.stringify({ name, about }),\r\n    }).then(this._checkStatus);\r\n  }\r\n  getNewCard(name, link) {\r\n    return fetch(`${this.baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this.headers,\r\n      credentials: 'include',\r\n      body: JSON.stringify({ name, link }),\r\n    }).then((res) => this._checkStatus(res));\r\n  }\r\n  addLike(id) {\r\n    return fetch(`${this.baseUrl}/cards/${id}/likes`, {\r\n      method: \"PUT\",\r\n      headers: this.headers,\r\n      credentials: 'include',\r\n    }).then((res) => this._checkStatus(res));\r\n  }\r\n  removeLike(id) {\r\n    return fetch(`${this.baseUrl}/cards/${id}/likes`, {\r\n      method: \"DELETE\",\r\n      headers: this.headers,\r\n      credentials: 'include',\r\n    }).then((res) => this._checkStatus(res));\r\n  }\r\n  deleteCard(id) {\r\n    return fetch(`${this.baseUrl}/cards/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: this.headers,\r\n      credentials: 'include',\r\n    }).then((res) => this._checkStatus(res));\r\n  }\r\n  changeAvatar(avatar) {\r\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this.headers,\r\n      credentials: 'include',\r\n      body: JSON.stringify({ avatar }),\r\n    }).then((res) => this._checkStatus(res));\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: \"https://localhost:3001\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}